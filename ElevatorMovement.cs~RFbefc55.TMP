using UnityEngine;
using System.Collections;

public class ElevatorMovement : MonoBehaviour
{
    public DoorController doorController; // Assign this in Unity

    private Vector3[] floorPositions = new Vector3[]
    {
        new Vector3(6.22f, -0.68f, 5.26f),  // 1st floor
        new Vector3(6.22f, 2.32f, 5.26f),   // 2nd floor
        new Vector3(6.22f, 5.32f, 5.26f),   // 3rd floor
        new Vector3(6.22f, 8.32f, 5.26f),   // 4th floor
        new Vector3(6.22f, 11.32f, 5.26f)   // 5th floor
    };

    private int currentFloor = 0;
    private bool isMoving = false;
    public float moveSpeed = 5f;

    void Start()
    {
        // Ensure the elevator starts at the first floor position
        transform.position = floorPositions[currentFloor];

        // Set the initial floor's Y position for the doors
        if (doorController != null)
        {
            doorController.SetDoorYPosition(floorPositions[currentFloor].y);
        }
    }

    public void CallElevator()
    {
        if (!isMoving)
        {
            StartCoroutine(ElevatorSequence());
        }
    }

    private IEnumerator ElevatorSequence()
    {
        isMoving = true;

        // Step 1: Close the doors before moving
        if (doorController != null)
        {
            doorController.CloseDoors();

            // Wait until the doors are fully closed
            while (doorController.IsDoorMoving())
            {
                yield return null;
            }
        }

        // Step 2: Move the elevator
        yield return StartCoroutine(MoveElevatorToNextFloor());

        // Step 3: Open the doors once the elevator reaches the floor
        if (doorController != null)
        {
            doorController.OpenDoors();
        }

        isMoving = false;
    }

    private IEnumerator MoveElevatorToNextFloor()
    {
        currentFloor = (currentFloor + 1) % floorPositions.Length;
        Vector3 targetPosition = floorPositions[currentFloor];

        // Move elevator to the new floor
        while (Vector3.Distance(transform.position, targetPosition) > 0.1f)
        {
            transform.position = Vector3.MoveTowards(transform.position, targetPosition, moveSpeed * Time.deltaTime);
            yield return null;
        }

        transform.position = targetPosition;

        // Update the door's Y position based on the new floor level
        if (doorController != null)
        {
            doorController.SetDoorYPosition(targetPosition.y);
        }

        Debug.Log("Elevator reached floor " + (currentFloor + 1));
    }
}
